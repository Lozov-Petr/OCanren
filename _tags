true: debug, rectypes, color(auto), bin_annot, keep_asm
true: short_paths

<samples>: not_hygienic
<camlp5/pa_ocanren.*>: syntax(camlp5o), package(camlp5)

#<src/MiniKanrenCore.ml>: use_time_log
<src/core/*> or <src/std/*> or <src/MiniKanrenStd*.*>: opaque
<src/core/*> or <src/std/*> or <src/MiniKanren*.*>: package(unix),syntax(camlp5o),package(GT,GT.syntax.all),package(logger.syntax)
<src/core/*.ml*> or <src/std/*> or <src/unfolding/*> or <src/*.ml*>: package(GT),package(mtime),package(mtime.clock.os)

<regression/orig/*>: traverse
<regression/test*.native> or <regression/test*.byte>: package(unix,str,mtime,mtime.clock.os)
<regression/stlc.*>: syntax(camlp5o), package(GT.syntax.all,mtime,mtime.clock.os)

<regression/test0*.*>: package(GT,GT.syntax.all,mtime,mtime.clock.os), syntax(camlp5o)

<regression/test*.ml> : syntax(camlp5o), package(logger.syntax,mtime,mtime.clock.os)
<regression/test0*.ml> : use_pa_ocanren, package(GT.syntax.all,mtime,mtime.clock.os)

####################################################################
<ppxnew/pp_distrib.*>:    package(ppxlib,GT.ppx_gt), link_ppx_distrib, link_ppx_gt, linkall
<ppxnew/pp_noinjected.*>: package(ppxlib),           link_ppx_noinjected, linkall
<ppxnew/ppx_distrib.*>:   package(ppxlib,GT.ppx_gt), linkall
<ppxnew/ppx_noinjected.*>: package(ppxlib,ppxlib.metaquot), linkall
<ppxnew/ppx_distrib_expander.*>: package(ppxlib,ppxlib.metaquot,GT.expander), linkall

<ppx/*>: package(ppxlib)
<ppx/pp_repr.native>:  link_ppx_repr
<ppx/pp_fresh.native>: link_ppx_fresh
<ppx/ppx_repr.*>: linkall
<ppx/ppx_fresh.*>: linkall, package(ppxlib.metaquot)
<ppx/pp_ocanren_all.native>: link_ppx_fresh, link_ppx_repr

<regression_ppx/test*.*>: package(GT), pp(ppxnew/pp_distrib.native -no-merge -apply distrib,deriving --as-pp), link_ocanren_cma
<regression_ppx/*.native>: package(unix)
